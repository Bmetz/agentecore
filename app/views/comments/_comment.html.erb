<%-
comment ||= @comment
truncate = truncate.nil? ? true : truncate


youtube_videos = comment.comment.scan(/\[youtube:+.+\]/)
c = comment.comment.dup.gsub(/\[youtube:+.+\]/, '')
-%>


<div id="<%= comment.dom_id %>" class="comment_holder">
  <%= icon comment.profile, :small, :class => 'left avatar_on_comment' %> 
  <div class="date_details_white">
  <%= comment.created_at %>, <%= link_to h(comment.profile.f), comment.profile %> <%= t(:wrote) %>: 
  </div>
  <div class="comment_message jstruncate">
      <%= sanitize(textilize(c)) %>
  </div>
  <div>
    <%= inline_tb_link("(#{t(:leave_a_answer)})", "resposta_#{comment.profile.id}", :title => t(:leave_a_answer_title, :nome => comment.profile.f)) if me and comment.commentable_type=='Profile' %>
  </div>
  <%= render(:partial => 'comments/form_resposta', :locals => {:comment_from => comment}) if me and comment.commentable_type=='Profile' %>  
  <% unless youtube_videos.empty? %>
    <strong><%= pluralize youtube_videos.size, 'video' %>:</strong><br/>
    <% youtube_videos.each do |o| %>
    <%= tb_video_link(o.gsub!(/\[youtube\:|\]/, '')) %>
  <% end
  end %>


  <div class="clear"></div>
</div>



